spring:
  application:
    # 为当前项目起名,这个名字会被Nacos获取并记录,由于之后的微服务调用
    name: nacos-business
  cloud:
    nacos:
      discovery:
        # 配置Nacos的位置,用于提交当前项目的信息
        server-addr: localhost:8848
        # ephemeral设置当前项目启动时注册到nacos的类型 true(默认):临时实例 false:永久实例
        ephemeral: false
    sentinel:
      transport:
        dashboard: localhost:8080 # 配置Sentinel提供的运行状态仪表台的位置
        port: 8722
dubbo:
  protocol:
    # port设置为-1 表示当前dubbo框架使用的端口自动寻找
    # 使用端口的规则是从20880开始寻找可用端口,如果当前端口号占用,就继续加1来使用,直到找到可用的为止
    port: -1
    # 设置连接的名称,一般固定为dubbo即可
    name: dubbo
  registry:
    # 指定当前Dubbo服务注册中心的类型和位置
    address: nacos://localhost:8848
  consumer:
    # 当前项目启动时,是否检查当前项目需要的所有Dubbo服务是否可用
    # 我们设置它为false,表示不检查,以减少启动时出错的情况
    check: false
seata:
  tx-service-group: csmall_group  # 定义事务的分组,一般是以项目为单位的,方便与其它项目区分
  service:
    vgroup-mapping:
      csmall_group: default     # csmall_group分组的配置,default会默认配置Seata
    grouplist:
      default: localhost:8091   # 配置Seata服务器的地址和端口号




